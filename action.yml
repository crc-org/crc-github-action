name: 'Run OpenShift/MicroShift cluster'
description: 'Run OpenShift/Microshift cluster using GH action'
inputs:
  pull-secret:
    description: 'pull-secret in case running OCP/Microshift.'
    default: ''
  preset:
    description: 'preset to use for CRC microshift/okd/openshift (default microshift).'
    required: true
    default: 'microshift'
  cpus:
    description: 'number of cpu consume by crc instance'
    required: false
  memory:
    description: 'memory in MiB consume by crc instance'
    required: false
  disk:
    description: 'disk size consumed by crc instance'
    required: false
runs:
  using: 'composite'
  steps:
    - name: Check runner OS
      if: ${{ runner.os != 'Linux' }}
      shell: bash
      run: |
        echo "::error title=⛔ error hint::Support Linux Only"
        exit 1
    - name: Check pull-secret
      if: |
        (inputs.preset == 'microshift' || inputs.preset == 'openshift') &&
        inputs.pull-secret == ''
      shell: bash
      run: |
        echo "::error title=⛔ error hint::For preset ${{ inputs.preset }} pull-secret is required"
        exit 1
    - name: Download CRC
      shell: bash
      run: |
        if [ ${{ runner.arch }} = "X64" ]; then
          CRC_ARCH="amd64"
        else
          CRC_ARCH="amd64"
        fi
        URL="https://mirror.openshift.com/pub/openshift-v4/clients/crc/latest/crc-linux-${CRC_ARCH}.tar.xz"
        echo "Downloading $URL"
        curl -H user-agent:crc-github-action -L "$URL" -o crc-linux.tar.xz --max-time 300 --fail
        SHA256SUM=$(curl -H user-agent:crc-github-action -L "${URL}".sha256 --fail)
        echo "Expected sha256: $SHA256SUM"
        echo "Actual sha256: $(sha256sum crc-linux.tar.xz)"
        echo "$SHA256SUM  crc-linux.tar.xz" | sha256sum -c
        tar -C /tmp -xvf crc-linux.tar.xz
        sudo mv /tmp/crc-linux-*-amd64/crc /usr/bin
    - name: Install required virtualization software
      shell: bash
      run: |
        sudo apt-get update
        sudo apt install qemu-kvm libvirt-daemon libvirt-daemon-system
        sudo usermod -a -G libvirt $USER
    - name: Remove unwanted stuff to free up disk image
      shell: bash
      run: |
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc
        sudo rm -rf "/usr/local/share/boost"
        sudo rm -rf /opt/hostedtoolcache/CodeQL
 
        sudo docker image prune --all --force
 
        sudo swapoff -a
        sudo rm -f /mnt/swapfile
    - name: Set the crc config
      shell: bash
      env:
        PRESET: ${{ inputs.preset }}
        PULL_SECRET: ${{ inputs.pull-secret }}
      run: |
        echo "${PULL_SECRET}" > pull-secret
        crc config set preset ${PRESET}
        crc config set pull-secret-file pull-secret
        crc config set network-mode user
        if [ -n "${{ inputs['cpus'] }}" ]; then
          echo "Using cpus: ${{ inputs['cpus'] }}"
          crc config set cpus ${{ inputs['cpus'] }}
        fi
        if [ -n "${{ inputs['memory'] }}" ]; then
          echo "Using memory: ${{ inputs['memory'] }}"
          crc config set memory ${{ inputs['memory'] }}
        fi
        if [ -n "${{ inputs['disk'] }}" ]; then
          echo "Using disk: ${{ inputs['disk'] }}"
          crc config set disk-size ${{ inputs['disk'] }}
        fi
    - name: Setup and Start the crc
      shell: bash
      run: |
        sudo -su $USER crc setup
        sudo -su $USER crc start
        sleep 60
    - name: Copy OpenShift client
      shell: bash
      run: sudo cp /home/$USER/.crc/bin/oc/oc /usr/bin/
    - name: Copy the kubeconfig file to required location
      shell: bash
      run: |
        mkdir -p /home/$USER/.kube
        cp /home/$USER/.crc/machines/crc/kubeconfig /home/$USER/.kube/config
        oc get pods -A

